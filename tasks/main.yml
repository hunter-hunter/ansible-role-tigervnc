---
# tasks file for tigervnc

- name: include assert.yml
  import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: install software
  package:
    name: "{{ tigervnc_packages }}"
    state: present

- name: create .vnc directory
  file:
    path: /home/{{ tigervnc_username }}/.vnc
    owner: "{{ tigervnc_username }}"
    group: "{{ tigervnc_groupname }}"
    state: directory
    mode: "755"

- name: generate vnc password
  shell: set -o pipefail ; printf "{{ tigervnc_password }}\n{{ tigervnc_password }}\n" | vncpasswd
  args:
    creates: /home/{{ tigervnc_username }}/.vnc/passwd
    executable: /bin/bash
  become: yes
  become_user: "{{ tigervnc_username }}"
  when:
    - not tigervnc_user_exists

- name: place xvncstartup
  template:
    src: xstartup
    dest: "/home/{{ tigervnc_username }}/.vnc/xstartup"
    owner: "{{ tigervnc_username }}"
    group: "{{ tigervnc_groupname }}"
    mode: "755"
  notify:
    - restart tigervnc

- name: place config
  template:
    src: config
    dest: "/home/{{ tigervnc_username }}/.vnc/config"
    owner: "{{ tigervnc_username }}"
    group: "{{ tigervnc_groupname }}"
    mode: "644"
  notify:
    - restart tigervnc
  when:
    - tigervnc_user_exists

- name: place .Xclients
  copy:
    content: "{{ tigervnc_desktop_session }}"
    dest: "/home/{{ tigervnc_username }}/.Xclients"
    owner: "{{ tigervnc_username }}"
    group: "{{ tigervnc_groupname }}"
    mode: "a+x"

- name: map users to displays
  lineinfile:
    path: /etc/tigervnc/vncserver.users
    line: :1={{ tigervnc_username }}
  when:
    - ansible_distribution == "Fedora"
  notify:
    - restart tigervnc

- name: place service unit
  template:
    src: "{{ tigervnc_unitfile_template }}"
    dest: /etc/systemd/system/vncserver@.service
    mode: "0644"
  notify:
    - systemctl daemon-reload

- name: flush handlers
  meta: flush_handlers

- name: start software
  service:
    name: "{{ tigervnc_service }}"
    state: started
    enabled: yes
    daemon-reload: yes
